{"ast":null,"code":"rfce;\n// import \"./App.css\";\n// import axios from \"axios\";\n// import Navbars from \"./component/Nav/Navbars\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import Footer from \"./component/Footer/Footer\";\n// import Login from \"./component/user/Login\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// import AskQustion from \"./component/AskQuastion/AskQustion\";\n// import Answer from \"./component/Answer/Answer\";\n// import ListQuastion from \"./component/ListQuastion/ListQuastion\";\n// import { useContext, useEffect } from \"react\";\n// import { UserContext } from \"./context/UseContext\";\n// function App() {\n//   const [userData, setUserData] = useContext(UserContext);\n\n//   const checkLoggedIn = async () => {\n//     //check if the token already exist in local storage\n//     let token = localStorage?.getItem(\"auth-token\");\n//     if (token === null) {\n//       //token doesnt exist in local storage then set auth token empty\n//       localStorage?.setItem(\"auth-token\", \"\");\n//       token = \"\";\n//     } else {\n//       //if token exist in localstorage then use auth to verify token and get user info\n//       const userRes = await axios?.get(\"http://localhost:5000/api/users\", {\n//         headers: { \"x-auth-token\": token },\n//       });\n\n//       // set the global state with user info\n//       setUserData({\n//         token,\n//         user: {\n//           id: userRes?.data.data.user_id,\n//           display_name: userRes?.data.data.user_name,\n//         },\n//       });\n//     }\n//   };\n\n//   // const logout = () => {\n//   //   //set global state to undefined will logout the user\n//   //   setUserData({\n//   //     token: undefined,\n//   //     user: undefined,\n//   //   });\n\n//   //   //resetting localStorage\n//   //   localStorage.setItem(\"auth-token\", \"\");\n//   // };\n\n//   useEffect(() => {\n//     //check if the user is logged in\n//     checkLoggedIn();\n//   }, []);\n//   console.log(userData);\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route\n//           path=\"/\"\n//           element={\n//             <>\n//               <Navbars />\n//               <Login />\n//               <Footer />\n//             </>\n//           }\n//         />\n//         {/* <Route\n//           path=\"/Login\"\n//           element={\n//             <>\n//               <Navbars />\n//               <Login />\n//               <Footer />\n//             </>\n//           }\n//         /> */}\n//         <Route\n//           path=\"/AskQustion\"\n//           element={\n//             <>\n//               <Navbars />\n//               <AskQustion />\n//             </>\n//           }\n//         />\n//         <Route\n//           path=\"/ListQuastion/:id\"\n//           element={\n//             <>\n//               <Navbars />\n//               <Answer />\n//             </>\n//           }\n//         />\n//         {/* <Route\n//           path=\"/Answer\"\n//           element={\n//             <>\n//               <Navbars />\n//               <Answer />\n//             </>\n//           }\n//         /> */}\n//         <Route\n//           path=\"/ListQuastion\"\n//           element={\n//             <>\n//               <Navbars />\n//               <ListQuastion />\n//             </>\n//           }\n//         />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":["rfce"],"sources":["/Users/behailuassefa12gmail.com/Desktop/Evangadi-Forum/evangadi-Forum/client/src/App.js"],"sourcesContent":["rfce\n// import \"./App.css\";\n// import axios from \"axios\";\n// import Navbars from \"./component/Nav/Navbars\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import Footer from \"./component/Footer/Footer\";\n// import Login from \"./component/user/Login\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// import AskQustion from \"./component/AskQuastion/AskQustion\";\n// import Answer from \"./component/Answer/Answer\";\n// import ListQuastion from \"./component/ListQuastion/ListQuastion\";\n// import { useContext, useEffect } from \"react\";\n// import { UserContext } from \"./context/UseContext\";\n// function App() {\n//   const [userData, setUserData] = useContext(UserContext);\n\n//   const checkLoggedIn = async () => {\n//     //check if the token already exist in local storage\n//     let token = localStorage?.getItem(\"auth-token\");\n//     if (token === null) {\n//       //token doesnt exist in local storage then set auth token empty\n//       localStorage?.setItem(\"auth-token\", \"\");\n//       token = \"\";\n//     } else {\n//       //if token exist in localstorage then use auth to verify token and get user info\n//       const userRes = await axios?.get(\"http://localhost:5000/api/users\", {\n//         headers: { \"x-auth-token\": token },\n//       });\n\n//       // set the global state with user info\n//       setUserData({\n//         token,\n//         user: {\n//           id: userRes?.data.data.user_id,\n//           display_name: userRes?.data.data.user_name,\n//         },\n//       });\n//     }\n//   };\n\n//   // const logout = () => {\n//   //   //set global state to undefined will logout the user\n//   //   setUserData({\n//   //     token: undefined,\n//   //     user: undefined,\n//   //   });\n\n//   //   //resetting localStorage\n//   //   localStorage.setItem(\"auth-token\", \"\");\n//   // };\n\n//   useEffect(() => {\n//     //check if the user is logged in\n//     checkLoggedIn();\n//   }, []);\n//   console.log(userData);\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route\n//           path=\"/\"\n//           element={\n//             <>\n//               <Navbars />\n//               <Login />\n//               <Footer />\n//             </>\n//           }\n//         />\n//         {/* <Route\n//           path=\"/Login\"\n//           element={\n//             <>\n//               <Navbars />\n//               <Login />\n//               <Footer />\n//             </>\n//           }\n//         /> */}\n//         <Route\n//           path=\"/AskQustion\"\n//           element={\n//             <>\n//               <Navbars />\n//               <AskQustion />\n//             </>\n//           }\n//         />\n//         <Route\n//           path=\"/ListQuastion/:id\"\n//           element={\n//             <>\n//               <Navbars />\n//               <Answer />\n//             </>\n//           }\n//         />\n//         {/* <Route\n//           path=\"/Answer\"\n//           element={\n//             <>\n//               <Navbars />\n//               <Answer />\n//             </>\n//           }\n//         /> */}\n//         <Route\n//           path=\"/ListQuastion\"\n//           element={\n//             <>\n//               <Navbars />\n//               <ListQuastion />\n//             </>\n//           }\n//         />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;\n"],"mappings":"AAAAA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}